---
import GitHub from '@/icons/GitHub.astro';
import Link from '@/icons/Link.astro';
import ReactJs from '@/icons/React.astro';
import ChakraUi from '@/icons/ChakraUi.astro';
import NodeJs from '@/icons/NodeJs.astro';
import JWT from '@/icons/JWT.astro';
import Express from '@/icons/Express.astro';
import MongoDB from '@/icons/MongoDB.astro';
import ReactRouter from '@/icons/ReactRouter.astro';
import Tailwind from '@/icons/Tailwind.astro';
import TypeScript from '@/icons/TypeScript.astro';

const { name, status, description, image, technologies, url, repository } =
  Astro.props;

const TECH_ICONS = {
  ReactJs: {
    Icon: ReactJs,
    className: 'bg-gray-100 dark:bg-zinc-800',
  },
  'Chakra-Ui': {
    Icon: ChakraUi,
    className: 'bg-gray-100 dark:bg-cyan-950',
  },
  NodeJs: {
    Icon: NodeJs,
    className: 'bg-gray-100 dark:bg-neutral-800',
  },
  TailwindCSS: {
    Icon: Tailwind,
    className: 'bg-gray-100 dark:bg-slate-800',
  },
  'React Router': {
    Icon: ReactRouter,
    className: 'bg-gray-100 dark:bg-gray-900',
  },
  JWT: {
    Icon: JWT,
    className: 'bg-gray-100 dark:bg-gray-800',
  },
  Express: {
    Icon: Express,
    className: 'bg-gray-100 dark:bg-gray-800',
  },
  MongoDB: {
    Icon: MongoDB,
    className: 'bg-gray-100 dark:bg-green-950',
  },
  TypeScript: {
    Icon: TypeScript,
    className: 'bg-gray-100 dark:bg-sky-950'
  }
};
---

<article class='group flex flex-col md:flex-row gap-x-8 gap-y-4'>
  <header
    class='md:w-1/2 rounded-xl shadow-xl flex-none group-hover:shadow-2xl duration-500 md:group-hover:-translate-y-1 overflow-clip'
  >
    <img
      src={image}
      alt=''
      class='object-cover object-left-top w-full h-56 sm:h-full md:scale-110 duration-500 md:group-hover:scale-105'
      loading='lazy'
    />
  </header>
  <div class='flex flex-col justify-between gap-y-4 pb-1'>
    <div class='space-y-2'>
      <span class='flex items-center gap-x-4'>
        <h3 class='text-2xl font-bold text-gray-800 dark:text-gray-100'>
          {name}
        </h3>
        {
          status && (
            <span class='py-0.5 px-1.5 rounded font-semibold text-xs bg-sky-100 text-sky-600 dark:bg-sky-900 dark:text-sky-200'>
              {status}
            </span>
          )
        }
      </span>
      <ul class='flex flex-wrap gap-2'>
        {
          technologies.map((technology) => {
            const Icon = TECH_ICONS[technology].Icon;
            return (
              <li>
                <span
                  class:list={[
                    `flex items-center gap-1 px-2.5 py-1 rounded-full font-medium text-xs duration-200 text-gray-800 dark:text-white`,
                    TECH_ICONS[technology].className,
                  ]}
                >
                  <Icon class='size-3.5' />
                  {technology}
                </span>
              </li>
            );
          })
        }
      </ul>
      <p
        class='font-medium pt-2 text-gray-700 dark:text-gray-300 xs:text-balance sm:text-pretty max-sm:pr-3'
      >
        {description}
      </p>
    </div>
    <footer
      class='flex gap-2 text-gray-700 dark:text-white *:text-lg *:inline-flex *:gap-2 *:items-center *:py-1 *:px-3 *:rounded-lg *:font-medium'
    >
      {
        repository && (
          <a
            href={repository}
            target='_blank'
            class='dark:hover:bg-gray-700 hover:bg-gray-100 bg-gray-200 dark:bg-gray-800 ring-1 ring-gray-400 dark:ring-gray-600 hover:ring-transparent transition-all'
          >
            <GitHub class='size-4' />
            GitHub
          </a>
        )
      }
      {
        url && (
          <a
            href={url}
            target='_blank'
            class='dark:hover:bg-gray-700 hover:bg-gray-100 bg-gray-200 dark:bg-gray-800 ring-1 ring-gray-400 dark:ring-gray-600 hover:ring-transparent transition-all'
          >
            <Link class='size-4' />
            Preview
          </a>
        )
      }
    </footer>
  </div>
</article>
