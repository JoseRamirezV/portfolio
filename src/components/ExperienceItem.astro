---
const { company, position, url, startDate, endDate, summary, highlights, id } =
  Astro.props;
---

<span
  class="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full start-1 ring-8 ring-white dark:ring-gray-900 dark:bg-blue-900"
>
  <svg
    class="size-2.5 text-blue-800 dark:text-blue-300"
    aria-hidden="true"
    xmlns="http://www.w3.org/2000/svg"
    fill="currentColor"
    viewBox="0 0 20 20"
  >
    <path
      d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"
    ></path>
  </svg>
</span>
<h3 class="flex items-center text-xl font-bold text-blue-500 dark:text-white">
  {position}
  {
    !endDate && (
      <span class="bg-blue-100 text-blue-800 text-sm font-medium me-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300 ms-3">
        Actual
      </span>
    )
  }
</h3>
<span class="text-lg font-medium text-gray-500">{company}</span>
<time
  class="block mt-1 mb-2 text-xs leading-none text-gray-400 dark:text-gray-500"
>
  {`${startDate} - ${endDate}`}
</time>
<p class="mb-4 font-medium text-gray-600 dark:text-gray-400 ">
  {summary}
  {
    highlights.length > 0 && (
      <>
        <ul class="max-w-2xl text-gray-500">
          {highlights.map((highlight) => {
            const [content, percentage, ...rest] = highlight.split(':');
            return (
              <li class="flex gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="3.5"
                  stroke="currentColor"
                  class="w-16 h-7 sm:size-7 text-blue-500"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="m4.5 12.75 6 6 9-13.5"
                  />
                </svg>
                <p>
                  {content}
                  {percentage && (<strong class="font-bold text-blue-500">{percentage}</strong>
                  <span>
                    {rest}
                  </span>)}</p>
              </li>
            );
          })}
        </ul>
      </>
    )
  }
</p>
{
  url && (
    <a
      href={url}
      class="inline-flex items-center gap-1 px-4 py-2 text-sm font-medium text-gray-600 bg-white border border-gray-200 rounded-lg hover:bg-sky-50 hover:text-blue-500 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"
    >
      Ir a sitio
      <svg
        class="size-3 text-blue-500"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 20 20"
        stroke-width="3"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="m8.25 4.5 7.5 7.5-7.5 7.5"
        />
      </svg>
    </a>
  )
}
