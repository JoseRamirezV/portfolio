---
import ArrowRight from "@/icons/ArrowRight.astro";
import HeroTags from "../HeroTags.astro";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";

const { basics } = Astro.props;
const { profiles, available, languages, resume, location } = basics;

const linkedInUrl = profiles.find(({ network }) => network === "LinkedIn").url;
const [title, summary, technologies] = basics.summary.split(":");

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<div class="flex max-sm:flex-col gap-x-2 items-center">
  <figure
    class="flex flex-col-reverse items-center gap-y-2 relative aspect-square flex-none"
  >
    {
      available && (
        <>
          <span class="max-sm:hidden peer absolute flex items-center justify-center bottom-[95%] left-[95%] rounded-full size-4 bg-blue-400 dark:bg-sky-500 p-px transition cursor-pointer">
            <span class="max-sm:hidden bg-blue-600 dark:bg-blue-500 rounded-full size-4 animate-ping" />
          </span>
          <a
            href={linkedInUrl}
            target="_blank"
            class="sm:absolute sm:-top-12 sm:left-full sm:-translate-x-1/2 lg:scale-0 lg:peer-hover:scale-100 transition origin-bottom rounded-lg text-sm max-sm:text-xs font-semibold py-2 px-3 bg-gradient-to-br dark:from-blue-900 dark:to-slate-800 from-blue-500 to-sky-400 text-white hover:scale-100 whitespace-nowrap"
          >
            {t("hero.available")}
          </a>
        </>
      )
    }
    <img
      class="size-32 sm:size-48 border border-gray rounded-xl"
      src="https://as1.ftcdn.net/v2/jpg/03/46/83/96/1000_F_346839683_6nAPzbhpSkIpb8pmAwufkC7c5eD7wYws.jpg"
      alt="user img"
    />
  </figure>
  <div class="max-w-xl p-2">
    <h1 class="text-gray-800 dark:text-white text-4xl md:text-5xl font-bold">
      Hola! soy Ricardo Ramirez
    </h1>
    <address
      class="flex items-center mb-2 text-sm leading-none text-gray-500 dark:text-gray-300"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="size-3"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"></path>
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1 1 15 0Z"
        ></path>
      </svg>
      <span class="mx-1">
        {location.city} - {location.region}
      </span>
    </address>
    <p
      class="text-lg dark:text-gray-200 [&>strong]:text-blue-500 dark:[&>strong]:text-blue-400 [&>strong]:font-bold text-pretty"
    >
      <strong>
        <a href="http://www.unipacifico.edu.co/" target="_blank">{title}</a>
      </strong>
      {summary}
      <strong><a href="#skills">{technologies}</a></strong>
    </p>
  </div>
</div>
<HeroTags profiles={profiles} resume={resume} />
<div class="space-x-2 mt-2 cursor-default">
  {
    languages &&
      languages.map(({ language, fluency, certificate, organization }) => (
        <a
          href={certificate}
          target="_blank"
          title={organization}
          class={`${certificate && "group"} inline-flex gap-x-1 items-center text-xs px-3 py-1 bg-slate-200 dark:bg-slate-700 dark:text-white rounded-full`}
        >
          <span>
            <strong class="text-blue-500 dark:text-blue-300">
              {`${language} - `}
            </strong>
            {fluency}
          </span>
          {certificate && (
            <ArrowRight class="size-2.5 group-hover:scale-[1.2] text-blue-500 dark:text-blue-400 transition" />
          )}
        </a>
      ))
  }
</div>
